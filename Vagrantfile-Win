# -*- mode: ruby -*-
# vi: set ft=ruby :
# Virtualbox Requirements
required_plugins = %w(vagrant-vbguest)

plugins_to_install = required_plugins.select { |plugin| not Vagrant.has_plugin? plugin }
if not plugins_to_install.empty?
  puts "Installing plugins: #{plugins_to_install.join(' ')}"
  if system "vagrant plugin install #{plugins_to_install.join(' ')}"
    exec "vagrant #{ARGV.join(' ')}"
  else
    abort "Installation of one or more plugins has failed. Aborting."
  end
end

# Blank Amazon Linux
MACHINE_NAME = "Botta-Bing"

# Ubuntu 20.04
VAGRANT_BOX="bento/ubuntu-20.04"

# Vb Guest Checking
ANSWER = "false"

Vagrant.configure("2") do |vm_config|
  vm_config.vm.provider "virtualbox" 
  vm_config.vm.box =  VAGRANT_BOX
  vm_config.vbguest.auto_update = ANSWER
  vm_config.vm.hostname = "botta-bing"
  vm_config.vm.define "workstation" do |config_machine|
    ############## File Defaults to NAT Network ################
    vm_config.vm.network "public_network", type: "dhcp" # Comment this out to use the other lines
    # vm_config.vm.network "public_network", bridge: "en0: Wi-Fi (AirPort)" # MAC
    # vm_config.vm.network "public_network", bridge: "Dell Wireless 1703 802.11b|g|n (2.4GHz)" # Windows
    ############################################################
    # Virtualbox specific settings
    vm_config.vm.provider "virtualbox" do |vb_config,override|
      vb_config.gui = false
      vb_config.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb_config.customize ["modifyvm", :id, "--cpuexecutioncap", "90"] # Adjust to your machines specs
      vb_config.customize ["modifyvm", :id, "--vram", 78] # Adjust to your machines specs
      vb_config.customize ["modifyvm", :id, "--graphicscontroller", "vboxvga"]
      vb_config.customize ["modifyvm", :id, "--cpus", "2"]
      vb_config.customize ["modifyvm", :id, "--memory", 4096] # Adjust to your machines specs
      vb_config.customize ["modifyvm", :id, "--usb", "off"]
      vb_config.customize ["modifyvm", :id, "--ioapic", "on"]
      vb_config.customize ["modifyvm", :id, "--accelerate-3d", "off"]
      vb_config.customize ["modifyvm", :id, "--audio", "was"]
      vb_config.customize ["modifyvm", :id, "--audio-in", "on"]
      vb_config.customize ["modifyvm", :id, "--audio-out", "on"]
      vb_config.customize ["modifyvm", :id, "--audiocontroller", "hda"]
      vb_config.customize ["modifyvm", :id, "--natdnsproxy1", "off"]
      vb_config.customize ["modifyvm", :id, "--natdnshostresolver1", "off"]
      vb_config.name = MACHINE_NAME

      override.ssh.username = "vagrant"
      override.vm.provision 'shell', inline: "sudo apt-get install dkms build-essential linux-headers-generic linux-headers-$(uname -r) -y"
      override.vm.provision 'shell', inline: "sudo apt update -y && sudo apt upgrade -y && sudo apt install ubuntu-desktop -y"
      override.vm.provision 'shell', inline: "sudo timedatectl set-timezone America/New_York"
      override.vm.provision 'shell', inline: "sudo apt install python3-pip cmake -y"
      override.vm.provision 'shell', inline: "sudo apt install nano tar curl wget build-essential jq bc dos2unix sox mpg123 vlc -y"
      override.vm.provision 'shell', inline: "pip3 install -U openai-whisper" # Openai Whispeer Transcribe - Speech To Text
      override.vm.provision 'shell', inline: "sudo snap install google-cloud-cli --classic" # Google API Transcription - Speech to Texts
      override.vm.provision 'shell', inline: "sudo apt remove ufw -y"
    end
  end
end
